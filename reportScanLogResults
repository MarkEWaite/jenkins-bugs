#!/bin/bash

# Read the Jenkins scan log for multibranch pipeline that defined this job
#
# Default Jenkins URL from JENKINS_URL environment variable
# Default Jenkins job repo URL from JOB_URL environment variable

usage() { echo "Usage: $0 [-s jenkins_server_url] [ -j jenkins_job_url ]" 1>&2; exit 1; }

failed() { echo Failed querying $1; exit 2; }

SERVER=
JENKINS_JOB_URL=

while getopts ":s:j:" o; do
    case "${o}" in
        s)
            SERVER=${OPTARG}
            ;;
        j)
            JENKINS_JOB_URL=${OPTARG}
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

# Assure URL of Jenkins server is set

if [ -z "$SERVER" ]; then
    SERVER=$JENKINS_URL
fi
if [ -z "$SERVER" ]; then
    usage
fi
# remove trailing slash from SERVER, fails CSRF exclusion check
SERVER=${SERVER%/}

# Assure URL of job is set

if [ -z "$JENKINS_JOB_URL" ]; then
    JENKINS_JOB_URL=$JOB_URL
fi
if [ -z "$JENKINS_JOB_URL" ]; then
    usage
fi

# Convert JENKINS_JOB_URL into SCAN_LOG_URL
# JENKINS_JOB_URL= http://mark-pc2.markwaite.net:8080/job/Bugs-Pipeline-Checks/job/jenkins-bugs-multibranch-pipeline-github/job/JENKINS-15103/
# SCAN_LOG_URL   = http://mark-pc2.markwaite.net:8080/job/Bugs-Pipeline-Checks/job/jenkins-bugs-multibranch-pipeline-github/indexing/consoleText

SCAN_LOG_URL=$(echo $JENKINS_JOB_URL | sed 's,job/JENKINS-[[:digit:]]*/$,indexing/consoleText,')

cookie_file=$(mktemp /tmp/reportScanLogResults-script.XXXXXX)

crumb=$(curl --cookie $cookie_file -s $SERVER/crumbIssuer/api/xml?xpath=concat\(//crumbRequestField,%22:%22,//crumb\))
if [ -z "$crumb" ]; then
    echo Exiting: No crumb returned by $SERVER
    exit 4
fi
if [[ $crumb =~ 'HTTP ERROR 404' ]]; then
    echo "Crumb request not answered - failing"
    echo $crumb
    echo "End of failed crumb request output - not found"
    exit 5
else
    if [[ $crumb =~ '<html>' ]]; then
        echo Exiting: html instead of crumb returned by $SERVER: $crumb
        echo "End of failed crumb request output - html"
        exit 6
    fi
    if [ ${#crumb} -gt 90 ]; then
        # First detected in Jenkins 2.190 that crumb is now 79 characters long
        echo Long crumb returned by $SERVER: $crumb
        echo "End of failed crumb request output - long"
    fi
fi

prefix=$RANDOM

# Use the crumb to query the scan log

query_output=${prefix}-crumbfull
echo "Querying GitHub branch scan log with crumb $crumb"
curl -s -H "$crumb" --cookie $cookie_file -X POST $SCAN_LOG_URL -o $query_output
rm $cookie_file

# echo === output from query with crumb
# cat $query_output
# echo === End of output from query with crumb

# Check for message that should always be in every scan log
grep -q 'Starting branch indexing' $query_output                             || failed ", branch indexing message not found in $SCAN_LOG_URL"

if grep -q 'Connecting to .*api.github.com' $query_output; then
    # Check for the failure message - no credentials
    grep -q 'Connecting to .*api.github.com .* no credentials' $query_output && failed ", no credentials used scanning $SCAN_LOG_URL"

    # Check for the success message - using specific credentials
    grep -q 'Connecting to .*api.github.com.* using ' $query_output          || failed ", GitHub connecting message not found in $SCAN_LOG_URL"
else
    echo "Not github output"
fi

echo "Branch scan log $SCAN_LOG_URL contains expected content"
exit 0
