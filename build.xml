<project name="JENKINS-38860" default="add-new-submodule" basedir=".">

  <!-- Add a new test submodule, remove all old test submodules -->
  <!-- See https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule -->
  <target name="add-new-submodule" description="Add a new submodule">
    <echo>java is ${java.version}</echo>
    <buildnumber/>
    <echo>Build number was ${build.number}</echo>
    <git command="add">
      <args>
        <arg value="build.number"/>
        <arg value="."/>
      </args>
    </git>
    <git command="commit">
      <args>
        <arg value="-m"/>
        <arg value="${user.name} updated build number, was ${build.number}"/>
        <arg value="build.number"/>
      </args>
    </git>
    <!-- Remove all test submodules -->
    <exec executable="bash" dir="." osfamily="unix">
      <arg value="remove-test-submodules" />
    </exec>
    <exec executable="cmd" dir="." osfamily="windows">
      <arg value="/c" />
      <arg value="remove-test-submodules.bat" />
    </exec>
    <!-- Add a test submodule -->
    <git command="submodule">
      <args>
        <arg value="add"/>
        <arg value="--reference"/>
        <arg value=".git"/>
        <arg value="--branch"/>
        <arg value="JENKINS-15103"/>
        <arg value="https://github.com/MarkEWaite/jenkins-bugs"/>
        <arg value="test-submodules/JENKINS-15103-${build.number}"/>
      </args>
    </git>
    <git command="commit">
      <args>
        <arg value="-a"/>
        <arg value="-m"/>
        <arg value="Added submodule test-submodules/JENKINS-15103-${build.number}"/>
      </args>
    </git>
  </target>

  <!-- Info about this repository -->
  <target name="info" description="Report info about this repo">
    <echo>java is ${java.version}</echo>
    <echo>user dir is ${user.dir}</echo>
    <echo/>
    <git command="branch" />

    <!-- Count files and directories in test-submodules -->
    <dirset id="submodule.src.dirs" dir="test-submodules" includes="**JENKINS*"/>
    <echo>submodule.src.dirs=${toString:submodule.src.dirs}</echo>
    <resourcecount property="submodule.src.count">
      <resources refid="submodule.src.dirs"/>
    </resourcecount>
    <echo>submodule.src.count=${submodule.src.count}</echo>
    <!-- Count files and directories in .git/modules/test-submodules -->
    <dirset id="submodule.git.dirs" dir=".git/modules/test-submodules" includes="**JENKINS*"/>
    <echo>submodule.src.dirs=${toString:submodule.git.dirs}</echo>
    <resourcecount property="submodule.git.count">
      <resources refid="submodule.git.dirs"/>
    </resourcecount>
    <echo>submodule.git.count=${submodule.git.count}</echo>

    <!-- Echo contents of submodule README for Jenkinsfile verification -->
    <first id="first.readme">
      <fileset dir="test-submodules" includes="**/README.md"/>
    </first>
    <loadfile property="submodule.readme" srcFile="${toString:first.readme}"/>
    <echo/>
    <echo>Submodule README from ${toString:first.readme}</echo>
    <echo>${submodule.readme}</echo>

    <!-- Report git submodule status -->
    <echo/>
    <echo>Start of submodule status</echo>
    <git command="submodule">
      <args>
        <arg value="status"/>
        <arg value="--recursive"/>
      </args>
    </git>
    <echo>End of submodule status</echo>

  </target>

  <!-- From https://gist.github.com/davejlong/874521 -->
  <macrodef name="git">
    <attribute name="command" />
    <attribute name="dir" default="" />
    <element name="args" optional="true" />
    <sequential>
      <echo message="git @{command}" />
      <exec executable="git" dir="@{dir}">
        <arg value="@{command}" />
        <args/>
      </exec>
    </sequential>
  </macrodef>

</project>
